/*
 *  Copyright (c) 2009 Martinus Ady H <mrt.itnewbies@gmail.com>.
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 * 
 *  o Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  o Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  o Neither the name of the <ORGANIZATION> nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 *  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 *  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 *  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 *  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 *  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 *  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *  
 *  AccordionPanel.java
 *  
 *  Created on Nov 11, 2009, 12:43:56 AM
 */

package id.web.martinusadyh.swingaccordionmenu;

/** AccordionPanel ini berfungsi sebagai <code>Container</code> untuk menu
 * Accordion, agar panel ini dapat berfungsi layaknya Menu Accordion <b>yang bisa
 * naik / turun ketika salah satu menu di klik</b>. Maka AccordionPanel ini
 * menggunakan <code>CardLayout</code> sebagai <code>Layout</code> utama-nya.
 *
 * @author Martinus Ady H <mrt.itnewbies@gmail.com>
 */
public class AccordionPanel extends javax.swing.JPanel {

    /** Creates new form AccordionPanel */
    public AccordionPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        buttonGroup1 = new javax.swing.ButtonGroup();
        mTaskButton1 = new id.web.martinusadyh.swingaccordionmenu.MTaskButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        mTaskButton2 = new id.web.martinusadyh.swingaccordionmenu.MTaskButton();
        mTaskButton3 = new id.web.martinusadyh.swingaccordionmenu.MTaskButton();

        jScrollPane2.setAlignmentX(0.0F);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "List 2 Item 1", "List 2 Item 2", "List 2 Item 3", "List 2 Item 4" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jScrollPane3.setAlignmentX(0.0F);
        jScrollPane3.setViewportView(jTree1);

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        buttonGroup1.add(mTaskButton1);
        mTaskButton1.setText("Show List 1");
        mTaskButton1.setParentComp(this);
        mTaskButton1.setResizeComponent(true);
        mTaskButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTaskButton1ActionPerformed(evt);
            }
        });
        add(mTaskButton1);

        jScrollPane1.setAlignmentX(0.0F);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "List 1 Item 1", "List 1 Item 2", "List 1 Item 3", "List 1 Item 4" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        add(jScrollPane1);

        buttonGroup1.add(mTaskButton2);
        mTaskButton2.setText("Show List 2");
        mTaskButton2.setParentComp(this);
        mTaskButton2.setResizeComponent(true);
        mTaskButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTaskButton2ActionPerformed(evt);
            }
        });
        add(mTaskButton2);

        buttonGroup1.add(mTaskButton3);
        mTaskButton3.setText("Show JTree");
        mTaskButton3.setParentComp(this);
        mTaskButton3.setResizeComponent(true);
        mTaskButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTaskButton3ActionPerformed(evt);
            }
        });
        add(mTaskButton3);
    }// </editor-fold>//GEN-END:initComponents

    private void mTaskButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTaskButton1ActionPerformed
        recreateLayout();
        add(mTaskButton1);
        add(jScrollPane1);
        add(mTaskButton2);
        add(mTaskButton3);
        revalidate();
    }//GEN-LAST:event_mTaskButton1ActionPerformed

    private void mTaskButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTaskButton2ActionPerformed
        recreateLayout();
        add(mTaskButton1);
        add(mTaskButton2);
        add(jScrollPane2);
        add(mTaskButton3);
        revalidate();
    }//GEN-LAST:event_mTaskButton2ActionPerformed

    private void mTaskButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTaskButton3ActionPerformed
        recreateLayout();
        add(mTaskButton1);
        add(mTaskButton2);
        add(mTaskButton3);
        add(jScrollPane3);
        revalidate();
    }//GEN-LAST:event_mTaskButton3ActionPerformed

    /** Fungsi method ini hanyalah untuk menghapus seluruh komponen yang telah
     * ditambahkan kemudian memasang <code>BoxLayout</code> dengan Axis Y AXIS */
    private void recreateLayout() {
        this.removeAll();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        this.setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private id.web.martinusadyh.swingaccordionmenu.MTaskButton mTaskButton1;
    private id.web.martinusadyh.swingaccordionmenu.MTaskButton mTaskButton2;
    private id.web.martinusadyh.swingaccordionmenu.MTaskButton mTaskButton3;
    // End of variables declaration//GEN-END:variables
}
